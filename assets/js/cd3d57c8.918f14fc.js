"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[928],{10109:function(e){e.exports=JSON.parse('{"functions":[{"name":"onStep","desc":"Fired when the motor\'s state updates.","params":[{"name":"handler","desc":"","lua_type":"(state: unknown) -> nil"}],"returns":[{"desc":"","lua_type":"Connection"}],"function_type":"method","source":{"line":37,"path":"src/BaseMotor.lua"}},{"name":"onStart","desc":"Fired whenever BaseMotor:start() is called.\\n\\nIf `useImplicitConnections` is set to true, this will be called whenever setGoal is called.","params":[{"name":"handler","desc":"","lua_type":"() -> nil"}],"returns":[{"desc":"","lua_type":"Connection"}],"function_type":"method","source":{"line":49,"path":"src/BaseMotor.lua"}},{"name":"onComplete","desc":"Fired whenever a motor finishes.\\n\\nIt\'s recommended to use onStep and check for a certain threshold (i.e. 99% of the way there) instead of using this, as it can often take a while to fire.","params":[{"name":"handler","desc":"","lua_type":"() -> nil"}],"returns":[{"desc":"","lua_type":"Connection"}],"function_type":"method","source":{"line":61,"path":"src/BaseMotor.lua"}},{"name":"start","desc":"Creates a connection to RunService if there isn\'t one already.","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":70,"path":"src/BaseMotor.lua"}},{"name":"stop","desc":"Removes the connection to RunService if it exists.","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":83,"path":"src/BaseMotor.lua"}},{"name":"__tostring","desc":"Returns the type of motor. Used for isMotor.","params":[],"returns":[{"desc":"","lua_type":"string"}],"function_type":"method","source":{"line":101,"path":"src/BaseMotor.lua"}}],"properties":[],"types":[{"name":"MotorState","desc":"","fields":[{"name":"value","lua_type":"number","desc":""},{"name":"velocity","lua_type":"number","desc":""},{"name":"complete","lua_type":"boolean","desc":""}],"source":{"line":14,"path":"src/BaseMotor.lua"}}],"name":"BaseMotor","desc":"Base class for SingleMotor and GroupMotor, manages connections to RunService.","source":{"line":20,"path":"src/BaseMotor.lua"}}')}}]);